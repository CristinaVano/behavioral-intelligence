import streamlit as st
from datetime import datetime
import pandas as pd
from fpdf import FPDF
import io
import base64
from PIL import Image
import os

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="BIAS - Behavioral Intelligence Analysis System",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Diccionarios para traducci√≥n (versi√≥n completa)
translations = {
    "Espa√±ol": {
        # ... (todas las traducciones anteriores)
        # Nuevas entradas para antecedentes
        "hate_speech": "Discurso de odio",
        "online_radicalization": "Radicalizaci√≥n en l√≠nea",
        "travel_attempts": "Intentos de viaje a zonas de conflicto",
        "financial_support": "Apoyo financiero a grupos extremistas",
        "possession_weapons": "Posesi√≥n de armas",
        "attack_planning": "Planificaci√≥n de ataques",
        "recruitment": "Reclutamiento de nuevos miembros",
        "propaganda_consumption": "Consumo de propaganda extremista",
        "isolation": "Aislamiento social",
        "identity_crisis": "Crisis de identidad",
        # Nuevos diagn√≥sticos
        "ptsd": "Trastorno de estr√©s postraum√°tico (TEPT)",
        "bpd": "Trastorno l√≠mite de la personalidad (TLP)",
        "bipolar": "Trastorno bipolar",
        "schizophrenia": "Esquizofrenia",
        "major_depression": "Depresi√≥n mayor recurrente",
        "ocd": "Trastorno obsesivo-compulsivo (TOC)",
        "gad": "Trastorno de ansiedad generalizada (TAG)",
        "panic_disorder": "Trastorno de p√°nico",
        "social_phobia": "Fobia social",
        "conduct_disorder": "Trastorno de la conducta",
        # Nuevos rasgos de personalidad
        "narcissistic": "Narcisista",
        "histrionic": "Histri√≥nico",
        "passive_aggressive": "Pasivo-agresivo",
        "schizoid": "Esquizoide",
        "obsessive": "Obcecado con el control",
        # Campos nuevos
        "clinical_history": "Historial Cl√≠nico",
        "psychological_profile": "Perfil Psicol√≥gico",
        "additional_comments": "Comentarios Adicionales"
    },
    # Repetir mismas adiciones para otros idiomas (English, ÿßŸÑÿπÿ±ÿ®Ÿäÿ©, Fran√ßais)
}

# Listas ampliadas
additional_terrorism_antecedents = [
    "hate_speech", "online_radicalization", "travel_attempts",
    "financial_support", "possession_weapons", "attack_planning",
    "recruitment", "propaganda_consumption", "isolation", "identity_crisis"
]

additional_mental_health_traits = [
    "ptsd", "bpd", "bipolar", "schizophrenia", "major_depression",
    "ocd", "gad", "panic_disorder", "social_phobia", "conduct_disorder"
]

additional_personality_traits = [
    "narcissistic", "histrionic", "passive_aggressive", "schizoid", "obsessive"
]

def main():
    st.title(translations["Espa√±ol"]["app_title"])

    # Autenticaci√≥n b√°sica
    username = st.text_input(translations["Espa√±ol"]["username"])
    password = st.text_input(translations["Espa√±ol"]["password"], type="password")

    if st.button(translations["Espa√±ol"]["login_button"]):
        if username and password:
            st.success(translations["Espa√±ol"]["welcome"] + f", {username}!")

            with st.container():
                st.header(translations["Espa√±ol"]["profile_section"])
                col1, col2, col3 = st.columns(3)
                
                # Columna 1
                with col1:
                    name = st.text_input(translations["Espa√±ol"]["name"])
                    id_number = st.text_input(translations["Espa√±ol"]["id_number"])
                    age = st.number_input(translations["Espa√±ol"]["age"], min_value=0, max_value=120, value=18)
                    gender = st.selectbox(translations["Espa√±ol"]["gender"], 
                                       [translations["Espa√±ol"]["male"], 
                                        translations["Espa√±ol"]["female"], 
                                        translations["Espa√±ol"]["other"]])
                    education = st.selectbox(translations["Espa√±ol"]["education"], 
                                          [translations["Espa√±ol"]["primary"], 
                                           translations["Espa√±ol"]["secondary"], 
                                           translations["Espa√±ol"]["university"], 
                                           translations["Espa√±ol"]["postgraduate"], 
                                           translations["Espa√±ol"]["none"]])
                
                # Columna 2
                with col2:
                    substances = st.multiselect(
                        translations["Espa√±ol"]["substances"],
                        [translations["Espa√±ol"]["alcohol"], 
                         translations["Espa√±ol"]["tobacco"],
                         translations["Espa√±ol"]["recreational"],
                         translations["Espa√±ol"]["cocaine"],
                         translations["Espa√±ol"]["heroin"],
                         translations["Espa√±ol"]["none_substance"]]
                    )
                    
                    criminal_record = st.multiselect(
                        translations["Espa√±ol"]["criminal_record"],
                        [translations["Espa√±ol"]["theft"],
                         translations["Espa√±ol"]["gender_violence"],
                         translations["Espa√±ol"]["homicide"],
                         translations["Espa√±ol"]["terrorism"],
                         translations["Espa√±ol"]["none_criminal"]] +
                        [translations["Espa√±ol"][item] for item in additional_terrorism_antecedents]
                    )
                    
                    personality_traits = st.multiselect(
                        translations["Espa√±ol"]["personality_traits"],
                        [translations["Espa√±ol"]["paranoid"],
                         translations["Espa√±ol"]["antisocial"],
                         translations["Espa√±ol"]["sadomasochistic"],
                         translations["Espa√±ol"]["impulsive"],
                         translations["Espa√±ol"]["unstable"],
                         translations["Espa√±ol"]["dependent"],
                         translations["Espa√±ol"]["avoidant"],
                         translations["Espa√±ol"]["none_traits"]] +
                        [translations["Espa√±ol"][item] for item in additional_personality_traits]
                    )
                
                # Columna 3
                with col3:
                    diagnosis_list = st.multiselect(
                        translations["Espa√±ol"]["diagnosis_list"],
                        [translations["Espa√±ol"][item] for item in additional_mental_health_traits]
                    )
                    
                    previous_therapies = st.text_input(translations["Espa√±ol"]["previous_therapies"])
                    therapy_date = st.date_input(translations["Espa√±ol"]["therapy_date"], datetime.now())
                    alarm_date = st.date_input(translations["Espa√±ol"]["alarm_date"], datetime.now()).year
                    st.write(f"A√±o de se√±ales: {alarm_date}")
                
                # Secci√≥n de informaci√≥n adicional
                st.header("Informaci√≥n Adicional")
                col4, col5, col6 = st.columns(3)
                with col4:
                    clinical_history = st.text_area(translations["Espa√±ol"]["clinical_history"])
                with col5:
                    psychological_profile = st.text_area(translations["Espa√±ol"]["psychological_profile"])
                with col6:
                    additional_comments = st.text_area(translations["Espa√±ol"]["additional_comments"])

            if st.button(translations["Espa√±ol"]["submit"]):
                # L√≥gica de generaci√≥n de informes
                if username == "demo_bias":
                    generate_generic_report(
                        name, id_number, age, gender, education, substances,
                        criminal_record, personality_traits, diagnosis_list,
                        previous_therapies, therapy_date, alarm_date,
                        clinical_history, psychological_profile, additional_comments
                    )
                elif username in ["JuanCarlos_bias", "Cristina_bias"]:
                    generate_generic_report(...)
                    generate_director_report(
                        name, id_number, age, gender, education, substances,
                        criminal_record, personality_traits, diagnosis_list,
                        previous_therapies, therapy_date, alarm_date,
                        clinical_history, psychological_profile, additional_comments
                    )

def generate_generic_report(...):
    # Implementaci√≥n completa de generaci√≥n de PDF con:
    # - Todos los campos nuevos incluidos
    # - Gr√°ficos de riesgo
    # - Explicaciones detalladas

def generate_director_report(...):
    # Implementaci√≥n con:
    # - Sistema de puntuaci√≥n detallado
    # - Metodolog√≠a de evaluaci√≥n
    # - Datos t√©cnicos completos

if __name__ == "__main__":
    main()

